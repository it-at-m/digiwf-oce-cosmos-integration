/*
 * sysHUB REST-API
 * The sysHUB REST API / SDK v3 is a RESTful API that provides third party teams access to sysHUB features through a standard way. This page documents all operations intended for third-party integration.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.ocecosmos.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * Data object wrapping a COSMOS job.
 */
@Schema(description = "Data object wrapping a COSMOS job.")

public class Jobs {
  @JsonProperty("categoryName")
  private String categoryName = null;

  @JsonProperty("client")
  private String client = null;

  @JsonProperty("customField")
  private String customField = null;

  @JsonProperty("customField1")
  private String customField1 = null;

  @JsonProperty("customField2")
  private String customField2 = null;

  @JsonProperty("customField3")
  private String customField3 = null;

  @JsonProperty("customField4")
  private String customField4 = null;

  @JsonProperty("dataType")
  private String dataType = null;

  @JsonProperty("del")
  private Integer del = null;

  @JsonProperty("delDate")
  private String delDate = null;

  @JsonProperty("delDays")
  private Integer delDays = null;

  @JsonProperty("id")
  private Long id = null;

  @JsonProperty("inputChannel")
  private String inputChannel = null;

  @JsonProperty("jobTypeName")
  private String jobTypeName = null;

  @JsonProperty("jobTypeUuid")
  private String jobTypeUuid = null;

  @JsonProperty("pages")
  private Integer pages = null;

  @JsonProperty("parentId")
  private Long parentId = null;

  @JsonProperty("priority")
  private Integer priority = null;

  @JsonProperty("procCount")
  private Integer procCount = null;

  @JsonProperty("processingHost")
  private String processingHost = null;

  @JsonProperty("senderHost")
  private String senderHost = null;

  @JsonProperty("sourceFile")
  private String sourceFile = null;

  @JsonProperty("startDate")
  private String startDate = null;

  @JsonProperty("startPoint")
  private String startPoint = null;

  @JsonProperty("status")
  private Integer status = null;

  @JsonProperty("submission")
  private String submission = null;

  @JsonProperty("textStatus")
  private String textStatus = null;

  @JsonProperty("ticketFile")
  private String ticketFile = null;

  @JsonProperty("title")
  private String title = null;

  @JsonProperty("userName")
  private String userName = null;

  @JsonProperty("xid")
  private String xid = null;

  public Jobs categoryName(String categoryName) {
    this.categoryName = categoryName;
    return this;
  }

   /**
   * The name of the category, usually determined by classification
   * @return categoryName
  **/
  @Schema(example = "CUSTOM_CAT", description = "The name of the category, usually determined by classification")
  public String getCategoryName() {
    return categoryName;
  }

  public void setCategoryName(String categoryName) {
    this.categoryName = categoryName;
  }

  public Jobs client(String client) {
    this.client = client;
    return this;
  }

   /**
   * Client name used for tracking
   * @return client
  **/
  @Schema(description = "Client name used for tracking")
  public String getClient() {
    return client;
  }

  public void setClient(String client) {
    this.client = client;
  }

  public Jobs customField(String customField) {
    this.customField = customField;
    return this;
  }

   /**
   * Any custom field
   * @return customField
  **/
  @Schema(example = "custom", description = "Any custom field")
  public String getCustomField() {
    return customField;
  }

  public void setCustomField(String customField) {
    this.customField = customField;
  }

  public Jobs customField1(String customField1) {
    this.customField1 = customField1;
    return this;
  }

   /**
   * Any custom field
   * @return customField1
  **/
  @Schema(example = "custom", description = "Any custom field")
  public String getCustomField1() {
    return customField1;
  }

  public void setCustomField1(String customField1) {
    this.customField1 = customField1;
  }

  public Jobs customField2(String customField2) {
    this.customField2 = customField2;
    return this;
  }

   /**
   * Any custom field
   * @return customField2
  **/
  @Schema(example = "custom", description = "Any custom field")
  public String getCustomField2() {
    return customField2;
  }

  public void setCustomField2(String customField2) {
    this.customField2 = customField2;
  }

  public Jobs customField3(String customField3) {
    this.customField3 = customField3;
    return this;
  }

   /**
   * Any custom field
   * @return customField3
  **/
  @Schema(example = "custom", description = "Any custom field")
  public String getCustomField3() {
    return customField3;
  }

  public void setCustomField3(String customField3) {
    this.customField3 = customField3;
  }

  public Jobs customField4(String customField4) {
    this.customField4 = customField4;
    return this;
  }

   /**
   * Any custom field
   * @return customField4
  **/
  @Schema(example = "custom", description = "Any custom field")
  public String getCustomField4() {
    return customField4;
  }

  public void setCustomField4(String customField4) {
    this.customField4 = customField4;
  }

  public Jobs dataType(String dataType) {
    this.dataType = dataType;
    return this;
  }

   /**
   * Optional string intended to specify the data file type
   * @return dataType
  **/
  @Schema(description = "Optional string intended to specify the data file type")
  public String getDataType() {
    return dataType;
  }

  public void setDataType(String dataType) {
    this.dataType = dataType;
  }

  public Jobs del(Integer del) {
    this.del = del;
    return this;
  }

   /**
   * not supported
   * @return del
  **/
  @Schema(description = "not supported")
  public Integer getDel() {
    return del;
  }

  public void setDel(Integer del) {
    this.del = del;
  }

  public Jobs delDate(String delDate) {
    this.delDate = delDate;
    return this;
  }

   /**
   * Date/time that the job is to be deleted
   * @return delDate
  **/
  @Schema(example = "2018-07-13T16:20:38.707", description = "Date/time that the job is to be deleted")
  public String getDelDate() {
    return delDate;
  }

  public void setDelDate(String delDate) {
    this.delDate = delDate;
  }

  public Jobs delDays(Integer delDays) {
    this.delDays = delDays;
    return this;
  }

   /**
   * Number of days that this job is to be stored after processing
   * @return delDays
  **/
  @Schema(example = "2", description = "Number of days that this job is to be stored after processing")
  public Integer getDelDays() {
    return delDays;
  }

  public void setDelDays(Integer delDays) {
    this.delDays = delDays;
  }

   /**
   * The unique job ID; is generated by COSMOS automatically
   * @return id
  **/
  @Schema(example = "1", description = "The unique job ID; is generated by COSMOS automatically")
  public Long getId() {
    return id;
  }

  public Jobs inputChannel(String inputChannel) {
    this.inputChannel = inputChannel;
    return this;
  }

   /**
   * The name of the input channel through which the job was received
   * @return inputChannel
  **/
  @Schema(example = "LPD", description = "The name of the input channel through which the job was received")
  public String getInputChannel() {
    return inputChannel;
  }

  public void setInputChannel(String inputChannel) {
    this.inputChannel = inputChannel;
  }

  public Jobs jobTypeName(String jobTypeName) {
    this.jobTypeName = jobTypeName;
    return this;
  }

   /**
   * Name of the job type allocated to the job
   * @return jobTypeName
  **/
  @Schema(example = "SAPInput", description = "Name of the job type allocated to the job")
  public String getJobTypeName() {
    return jobTypeName;
  }

  public void setJobTypeName(String jobTypeName) {
    this.jobTypeName = jobTypeName;
  }

  public Jobs jobTypeUuid(String jobTypeUuid) {
    this.jobTypeUuid = jobTypeUuid;
    return this;
  }

   /**
   * Foreign key relation to the job type
   * @return jobTypeUuid
  **/
  @Schema(description = "Foreign key relation to the job type")
  public String getJobTypeUuid() {
    return jobTypeUuid;
  }

  public void setJobTypeUuid(String jobTypeUuid) {
    this.jobTypeUuid = jobTypeUuid;
  }

  public Jobs pages(Integer pages) {
    this.pages = pages;
    return this;
  }

   /**
   * A process can enter the number of pages in a print file here
   * @return pages
  **/
  @Schema(description = "A process can enter the number of pages in a print file here")
  public Integer getPages() {
    return pages;
  }

  public void setPages(Integer pages) {
    this.pages = pages;
  }

  public Jobs parentId(Long parentId) {
    this.parentId = parentId;
    return this;
  }

   /**
   * ID for creation of nested jobs
   * @return parentId
  **/
  @Schema(description = "ID for creation of nested jobs")
  public Long getParentId() {
    return parentId;
  }

  public void setParentId(Long parentId) {
    this.parentId = parentId;
  }

  public Jobs priority(Integer priority) {
    this.priority = priority;
    return this;
  }

   /**
   * Priority of the job according to the job type
   * @return priority
  **/
  @Schema(example = "50", description = "Priority of the job according to the job type")
  public Integer getPriority() {
    return priority;
  }

  public void setPriority(Integer priority) {
    this.priority = priority;
  }

  public Jobs procCount(Integer procCount) {
    this.procCount = procCount;
    return this;
  }

   /**
   * Number of times that this job was executed
   * @return procCount
  **/
  @Schema(example = "0", description = "Number of times that this job was executed")
  public Integer getProcCount() {
    return procCount;
  }

  public void setProcCount(Integer procCount) {
    this.procCount = procCount;
  }

  public Jobs processingHost(String processingHost) {
    this.processingHost = processingHost;
    return this;
  }

   /**
   * Host that processed the job. Might be of interest if a COSMOS is setup up as cluster
   * @return processingHost
  **/
  @Schema(example = "COSMOS_2331", description = "Host that processed the job. Might be of interest if a COSMOS is setup up as cluster")
  public String getProcessingHost() {
    return processingHost;
  }

  public void setProcessingHost(String processingHost) {
    this.processingHost = processingHost;
  }

   /**
   * Host that sent the job; is generated by COSMOS automatically
   * @return senderHost
  **/
  @Schema(example = "COSMOS_Server1", description = "Host that sent the job; is generated by COSMOS automatically")
  public String getSenderHost() {
    return senderHost;
  }

  public Jobs sourceFile(String sourceFile) {
    this.sourceFile = sourceFile;
    return this;
  }

   /**
   * Name of the source file belonging to this job
   * @return sourceFile
  **/
  @Schema(example = "input.xml", description = "Name of the source file belonging to this job")
  public String getSourceFile() {
    return sourceFile;
  }

  public void setSourceFile(String sourceFile) {
    this.sourceFile = sourceFile;
  }

  public Jobs startDate(String startDate) {
    this.startDate = startDate;
    return this;
  }

   /**
   * not supported
   * @return startDate
  **/
  @Schema(example = "2018-07-13T16:20:38.707", description = "not supported")
  public String getStartDate() {
    return startDate;
  }

  public void setStartDate(String startDate) {
    this.startDate = startDate;
  }

  public Jobs startPoint(String startPoint) {
    this.startPoint = startPoint;
    return this;
  }

   /**
   * Start point of the workflow at which processing is to continue in a restart
   * @return startPoint
  **/
  @Schema(example = "Start", description = "Start point of the workflow at which processing is to continue in a restart")
  public String getStartPoint() {
    return startPoint;
  }

  public void setStartPoint(String startPoint) {
    this.startPoint = startPoint;
  }

  public Jobs status(Integer status) {
    this.status = status;
    return this;
  }

   /**
   * Status of job
   * @return status
  **/
  @Schema(example = "5", description = "Status of job")
  public Integer getStatus() {
    return status;
  }

  public void setStatus(Integer status) {
    this.status = status;
  }

  public Jobs submission(String submission) {
    this.submission = submission;
    return this;
  }

   /**
   * Date/time that this job was received
   * @return submission
  **/
  @Schema(example = "2018-07-13T16:20:38.707", description = "Date/time that this job was received")
  public String getSubmission() {
    return submission;
  }

  public void setSubmission(String submission) {
    this.submission = submission;
  }

  public Jobs textStatus(String textStatus) {
    this.textStatus = textStatus;
    return this;
  }

   /**
   * Freely changeable status of the job
   * @return textStatus
  **/
  @Schema(example = "processing", description = "Freely changeable status of the job")
  public String getTextStatus() {
    return textStatus;
  }

  public void setTextStatus(String textStatus) {
    this.textStatus = textStatus;
  }

  public Jobs ticketFile(String ticketFile) {
    this.ticketFile = ticketFile;
    return this;
  }

   /**
   * Name of the ticket file belonging to this job
   * @return ticketFile
  **/
  @Schema(example = "ticket.xml", description = "Name of the ticket file belonging to this job")
  public String getTicketFile() {
    return ticketFile;
  }

  public void setTicketFile(String ticketFile) {
    this.ticketFile = ticketFile;
  }

  public Jobs title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the job
   * @return title
  **/
  @Schema(example = "invoive job", description = "Title of the job")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

   /**
   * User that sent the job; is generated by COSMOS automatically
   * @return userName
  **/
  @Schema(example = "ADMIN", description = "User that sent the job; is generated by COSMOS automatically")
  public String getUserName() {
    return userName;
  }

  public Jobs xid(String xid) {
    this.xid = xid;
    return this;
  }

   /**
   * ID of the sending system for this job
   * @return xid
  **/
  @Schema(example = "655-23", description = "ID of the sending system for this job")
  public String getXid() {
    return xid;
  }

  public void setXid(String xid) {
    this.xid = xid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Jobs jobs = (Jobs) o;
    return Objects.equals(this.categoryName, jobs.categoryName) &&
        Objects.equals(this.client, jobs.client) &&
        Objects.equals(this.customField, jobs.customField) &&
        Objects.equals(this.customField1, jobs.customField1) &&
        Objects.equals(this.customField2, jobs.customField2) &&
        Objects.equals(this.customField3, jobs.customField3) &&
        Objects.equals(this.customField4, jobs.customField4) &&
        Objects.equals(this.dataType, jobs.dataType) &&
        Objects.equals(this.del, jobs.del) &&
        Objects.equals(this.delDate, jobs.delDate) &&
        Objects.equals(this.delDays, jobs.delDays) &&
        Objects.equals(this.id, jobs.id) &&
        Objects.equals(this.inputChannel, jobs.inputChannel) &&
        Objects.equals(this.jobTypeName, jobs.jobTypeName) &&
        Objects.equals(this.jobTypeUuid, jobs.jobTypeUuid) &&
        Objects.equals(this.pages, jobs.pages) &&
        Objects.equals(this.parentId, jobs.parentId) &&
        Objects.equals(this.priority, jobs.priority) &&
        Objects.equals(this.procCount, jobs.procCount) &&
        Objects.equals(this.processingHost, jobs.processingHost) &&
        Objects.equals(this.senderHost, jobs.senderHost) &&
        Objects.equals(this.sourceFile, jobs.sourceFile) &&
        Objects.equals(this.startDate, jobs.startDate) &&
        Objects.equals(this.startPoint, jobs.startPoint) &&
        Objects.equals(this.status, jobs.status) &&
        Objects.equals(this.submission, jobs.submission) &&
        Objects.equals(this.textStatus, jobs.textStatus) &&
        Objects.equals(this.ticketFile, jobs.ticketFile) &&
        Objects.equals(this.title, jobs.title) &&
        Objects.equals(this.userName, jobs.userName) &&
        Objects.equals(this.xid, jobs.xid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(categoryName, client, customField, customField1, customField2, customField3, customField4, dataType, del, delDate, delDays, id, inputChannel, jobTypeName, jobTypeUuid, pages, parentId, priority, procCount, processingHost, senderHost, sourceFile, startDate, startPoint, status, submission, textStatus, ticketFile, title, userName, xid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Jobs {\n");
    
    sb.append("    categoryName: ").append(toIndentedString(categoryName)).append("\n");
    sb.append("    client: ").append(toIndentedString(client)).append("\n");
    sb.append("    customField: ").append(toIndentedString(customField)).append("\n");
    sb.append("    customField1: ").append(toIndentedString(customField1)).append("\n");
    sb.append("    customField2: ").append(toIndentedString(customField2)).append("\n");
    sb.append("    customField3: ").append(toIndentedString(customField3)).append("\n");
    sb.append("    customField4: ").append(toIndentedString(customField4)).append("\n");
    sb.append("    dataType: ").append(toIndentedString(dataType)).append("\n");
    sb.append("    del: ").append(toIndentedString(del)).append("\n");
    sb.append("    delDate: ").append(toIndentedString(delDate)).append("\n");
    sb.append("    delDays: ").append(toIndentedString(delDays)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    inputChannel: ").append(toIndentedString(inputChannel)).append("\n");
    sb.append("    jobTypeName: ").append(toIndentedString(jobTypeName)).append("\n");
    sb.append("    jobTypeUuid: ").append(toIndentedString(jobTypeUuid)).append("\n");
    sb.append("    pages: ").append(toIndentedString(pages)).append("\n");
    sb.append("    parentId: ").append(toIndentedString(parentId)).append("\n");
    sb.append("    priority: ").append(toIndentedString(priority)).append("\n");
    sb.append("    procCount: ").append(toIndentedString(procCount)).append("\n");
    sb.append("    processingHost: ").append(toIndentedString(processingHost)).append("\n");
    sb.append("    senderHost: ").append(toIndentedString(senderHost)).append("\n");
    sb.append("    sourceFile: ").append(toIndentedString(sourceFile)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    startPoint: ").append(toIndentedString(startPoint)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submission: ").append(toIndentedString(submission)).append("\n");
    sb.append("    textStatus: ").append(toIndentedString(textStatus)).append("\n");
    sb.append("    ticketFile: ").append(toIndentedString(ticketFile)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("    xid: ").append(toIndentedString(xid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
