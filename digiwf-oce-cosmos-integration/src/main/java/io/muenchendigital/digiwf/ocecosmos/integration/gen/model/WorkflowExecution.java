/*
 * sysHUB REST-API
 * The sysHUB REST API / SDK v3 is a RESTful API that provides third party teams access to sysHUB features through a standard way. This page documents all operations intended for third-party integration.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.ocecosmos.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * A COSMOS workflow execution object holding workflow execution parameters and feedback
 */
@Schema(description = "A COSMOS workflow execution object holding workflow execution parameters and feedback")

public class WorkflowExecution {
  @JsonProperty("async")
  private Boolean async = null;

  @JsonProperty("dictionary")
  private Object dictionary = null;

  @JsonProperty("endTime")
  private String endTime = null;

  @JsonProperty("jobId")
  private Long jobId = null;

  @JsonProperty("jobLogId")
  private Long jobLogId = null;

  @JsonProperty("startTime")
  private String startTime = null;

  /**
   * Workflow execution status
   */
  public enum StatusEnum {
    COMPLETED("COMPLETED"),
    EXCEPTION("EXCEPTION"),
    PENDING("PENDING"),
    RUNNING("RUNNING");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static StatusEnum fromValue(String input) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("status")
  private StatusEnum status = null;

  @JsonProperty("submissionTime")
  private String submissionTime = null;

  @JsonProperty("uuid")
  private String uuid = null;

  @JsonProperty("workflowUuid")
  private String workflowUuid = null;

  public WorkflowExecution async(Boolean async) {
    this.async = async;
    return this;
  }

   /**
   * Workflow asynchronous execution mode. Default: true
   * @return async
  **/
  @Schema(example = "true", description = "Workflow asynchronous execution mode. Default: true")
  public Boolean isAsync() {
    return async;
  }

  public void setAsync(Boolean async) {
    this.async = async;
  }

  public WorkflowExecution dictionary(Object dictionary) {
    this.dictionary = dictionary;
    return this;
  }

   /**
   * Dictionary map for input parameters and execution results retrieval
   * @return dictionary
  **/
  @Schema(example = "{\"key1\":\"value1\",\"key2\":\"value2\"}", description = "Dictionary map for input parameters and execution results retrieval")
  public Object getDictionary() {
    return dictionary;
  }

  public void setDictionary(Object dictionary) {
    this.dictionary = dictionary;
  }

   /**
   * Time at which the workflow execution has ended formatted as dd-MM-yyyyTHH:mm:ss.SSS
   * @return endTime
  **/
  @Schema(example = "13-07-2018T16:20:38.707", description = "Time at which the workflow execution has ended formatted as dd-MM-yyyyTHH:mm:ss.SSS")
  public String getEndTime() {
    return endTime;
  }

  public WorkflowExecution jobId(Long jobId) {
    this.jobId = jobId;
    return this;
  }

   /**
   * An optional id of the job to reference during workflow execution
   * minimum: 1
   * @return jobId
  **/
 @Min(1)  @Schema(example = "1", description = "An optional id of the job to reference during workflow execution")
  public Long getJobId() {
    return jobId;
  }

  public void setJobId(Long jobId) {
    this.jobId = jobId;
  }

  public WorkflowExecution jobLogId(Long jobLogId) {
    this.jobLogId = jobLogId;
    return this;
  }

   /**
   * Parent job log Id - All log entries will be appended under the specified job log entry. If the job log Id is not specified, all log entries will be written to job root level or syslog if no job Id is specified either.
   * minimum: 1
   * @return jobLogId
  **/
 @Min(1)  @Schema(example = "1", description = "Parent job log Id - All log entries will be appended under the specified job log entry. If the job log Id is not specified, all log entries will be written to job root level or syslog if no job Id is specified either.")
  public Long getJobLogId() {
    return jobLogId;
  }

  public void setJobLogId(Long jobLogId) {
    this.jobLogId = jobLogId;
  }

   /**
   * Time at which the workflow execution has been started formatted as dd-MM-yyyyTHH:mm:ss.SSS
   * @return startTime
  **/
  @Schema(example = "13-07-2018T16:20:38.707", description = "Time at which the workflow execution has been started formatted as dd-MM-yyyyTHH:mm:ss.SSS")
  public String getStartTime() {
    return startTime;
  }

   /**
   * Workflow execution status
   * @return status
  **/
  @Schema(example = "success", description = "Workflow execution status")
  public StatusEnum getStatus() {
    return status;
  }

   /**
   * Time at which the workflow execution has been submitted formatted as dd-MM-yyyyTHH:mm:ss.SSS
   * @return submissionTime
  **/
  @Schema(example = "13-07-2018T16:20:38.707", description = "Time at which the workflow execution has been submitted formatted as dd-MM-yyyyTHH:mm:ss.SSS")
  public String getSubmissionTime() {
    return submissionTime;
  }

   /**
   * Workflow execution object unique id allowing to retrieve workflow execution feedback
   * @return uuid
  **/
 @Size(min=32,max=32)  @Schema(example = "0a1da610646a1cdb81646accdb9d0000", description = "Workflow execution object unique id allowing to retrieve workflow execution feedback")
  public String getUuid() {
    return uuid;
  }

  public WorkflowExecution workflowUuid(String workflowUuid) {
    this.workflowUuid = workflowUuid;
    return this;
  }

   /**
   * Executed workflow unique id
   * @return workflowUuid
  **/
  @NotNull
 @Size(min=32,max=32)  @Schema(example = "0a1da610646a1cdb81646accdb9d0000", required = true, description = "Executed workflow unique id")
  public String getWorkflowUuid() {
    return workflowUuid;
  }

  public void setWorkflowUuid(String workflowUuid) {
    this.workflowUuid = workflowUuid;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    WorkflowExecution workflowExecution = (WorkflowExecution) o;
    return Objects.equals(this.async, workflowExecution.async) &&
        Objects.equals(this.dictionary, workflowExecution.dictionary) &&
        Objects.equals(this.endTime, workflowExecution.endTime) &&
        Objects.equals(this.jobId, workflowExecution.jobId) &&
        Objects.equals(this.jobLogId, workflowExecution.jobLogId) &&
        Objects.equals(this.startTime, workflowExecution.startTime) &&
        Objects.equals(this.status, workflowExecution.status) &&
        Objects.equals(this.submissionTime, workflowExecution.submissionTime) &&
        Objects.equals(this.uuid, workflowExecution.uuid) &&
        Objects.equals(this.workflowUuid, workflowExecution.workflowUuid);
  }

  @Override
  public int hashCode() {
    return Objects.hash(async, dictionary, endTime, jobId, jobLogId, startTime, status, submissionTime, uuid, workflowUuid);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class WorkflowExecution {\n");
    
    sb.append("    async: ").append(toIndentedString(async)).append("\n");
    sb.append("    dictionary: ").append(toIndentedString(dictionary)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("    jobId: ").append(toIndentedString(jobId)).append("\n");
    sb.append("    jobLogId: ").append(toIndentedString(jobLogId)).append("\n");
    sb.append("    startTime: ").append(toIndentedString(startTime)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    submissionTime: ").append(toIndentedString(submissionTime)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    workflowUuid: ").append(toIndentedString(workflowUuid)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
