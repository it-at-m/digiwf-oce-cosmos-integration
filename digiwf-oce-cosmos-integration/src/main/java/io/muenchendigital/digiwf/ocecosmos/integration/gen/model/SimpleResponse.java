/*
 * sysHUB REST-API
 * The sysHUB REST API / SDK v3 is a RESTful API that provides third party teams access to sysHUB features through a standard way. This page documents all operations intended for third-party integration.
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package io.muenchendigital.digiwf.ocecosmos.integration.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonValue;
import io.swagger.v3.oas.annotations.media.Schema;
import javax.validation.constraints.*;
import javax.validation.Valid;
/**
 * The SimpleResponse object contains only a name and a value and the content is depend to the request
 */
@Schema(description = "The SimpleResponse object contains only a name and a value and the content is depend to the request")

public class SimpleResponse {
  @JsonProperty("name")
  private String name = null;

  /**
   * The type of the value as an enumeration value
   */
  public enum TypeEnum {
    MESSAGE("message"),
    RESULT("result");

    private String value;

    TypeEnum(String value) {
      this.value = value;
    }
    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }
    @JsonCreator
    public static TypeEnum fromValue(String input) {
      for (TypeEnum b : TypeEnum.values()) {
        if (b.value.equals(input)) {
          return b;
        }
      }
      return null;
    }

  }  @JsonProperty("type")
  private TypeEnum type = null;

  @JsonProperty("value")
  private Object value = null;

  public SimpleResponse name(String name) {
    this.name = name;
    return this;
  }

   /**
   * The name of the response object
   * @return name
  **/
  @Schema(example = "id", description = "The name of the response object")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public SimpleResponse type(TypeEnum type) {
    this.type = type;
    return this;
  }

   /**
   * The type of the value as an enumeration value
   * @return type
  **/
  @Schema(example = "result", description = "The type of the value as an enumeration value")
  public TypeEnum getType() {
    return type;
  }

  public void setType(TypeEnum type) {
    this.type = type;
  }

  public SimpleResponse value(Object value) {
    this.value = value;
    return this;
  }

   /**
   * The value describes the key properties value
   * @return value
  **/
  @Schema(example = "12", description = "The value describes the key properties value")
  public Object getValue() {
    return value;
  }

  public void setValue(Object value) {
    this.value = value;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    SimpleResponse simpleResponse = (SimpleResponse) o;
    return Objects.equals(this.name, simpleResponse.name) &&
        Objects.equals(this.type, simpleResponse.type) &&
        Objects.equals(this.value, simpleResponse.value);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, type, value);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class SimpleResponse {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
